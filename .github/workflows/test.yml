name: Test

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest

    steps:
    - name: Code checkout
      uses: actions/checkout@v3
      with:
        persist-credentials: false

    - name: ShellCheck
      run: |
        find . -path ./.git -prune -o -type f -print0 | \
          xargs --no-run-if-empty --null --max-args=1 \
            sed --quiet '/^#!.*sh$/F;q' | \
              xargs --no-run-if-empty \
                shellcheck --external-sources --check-sourced

    - name: Setup
#      ports:
#        - 2221
#        - 2231
#        - 2222
#        - 21000-21010
#        - 22000-22010
      run: |
        id
        # FIXME: Debug and fix the plain FTP server setup
        ./setup &
        # Give some time for the containers to start
        sleep 15
        echo -e "ls\nbye" > ftp-commands
        sudo apt install --yes lftp

    # TODO
    #- name: FTP connection test
    #  run: |
    #    cat ftp-commands | \
    #      ftp -d -q 10 -v ftp://ftpuser:ftppass@localhost:2221

    - name: FTPS connection test
      run: |
        cat << EOF > ~/.lftprc
        set ftp:ssl-auth TLS
        set ftp:ssl-force true
        set ftp:ssl-protect-list yes
        set ftp:ssl-protect-data yes
        set ftp:ssl-protect-fxp yes
        set ssl:verify-certificate no
        set ssl:verify-certificate no
        set ftp:passive-mode yes
        debug 1
        EOF
        cat ftp-commands | \
          lftp -u ftpuser,ftppass ftp://localhost:2231
        rm --force ~/.lftprc

    - name: SFTP connection test
      run: |
        export SSHPASS=ftppass
        cat ftp-commands | \
          sshpass -e sftp -o StrictHostKeyChecking=accept-new -P 2222 ftpuser@localhost
        unset SSHPASS

    - name: Teardown
      if: always()
      run: |
        ./teardown
        rm --force ftp-commands
